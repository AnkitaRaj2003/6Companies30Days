//Leetcode: https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/description/

class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& e, int dt) {
        vector<vector<long long>> dis(n,vector<long long>(n,LONG_MAX));
        for(int i=0;i<n;i++)
         dis[i][i]=0;
        for(auto it:e)
        {
            dis[it[0]][it[1]]=it[2];
            dis[it[1]][it[0]]=it[2];
        }
        //finding minimum distance from i to j through all cities k
        for(int k=0;k<n;k++)
        {
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<n;j++)
                {
                    if(dis[i][k]==LONG_MAX||dis[k][j]==LONG_MAX)
                     continue;
                    if(dis[i][k]+dis[k][j]<dis[i][j])
                     dis[i][j]=dis[i][k]+dis[k][j];
                }
            }
        }
        // counting the number of cities that can be reached from city i in min distance equal to given threshold
        vector<int> ans(n,0);
        int mi=INT_MAX; // minimum no. of cities that can be reached
        for(int i=0;i<n;i++)
        {
           for(int j=0;j<n;j++)
           {
               if(dis[i][j]<=dt)
                ans[i]++;
           }
           mi=min(mi,ans[i]);
        }
        // city with greatest number and minimum no. of cities reachable in threshold distance
        for(int i=n-1;i>=0;i--)
        {
           if(ans[i]==mi)
            return i;
        }
        return 0;
    }
};

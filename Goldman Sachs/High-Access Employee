//Leetcode: https://leetcode.com/problems/high-access-employees/

    vector<string> findHighAccessEmployees(vector<vector<string>>& a) {
        int n = a.size();
        unordered_map<string,int>m;
        vector<string>ans;
        for(auto x:a) m[x[0]]++;
        for(auto x:m){
            if(x.second>2){
                bool flag=false;
                vector<int>v;
                for(int i=0;i<n;i++){
                    if(a[i][0]==x.first) v.push_back(stoi(a[i][1]));
                }
                sort(v.begin(),v.end());
                for(int i=0;i<v.size()-2;i++){
                    flag |= (v[i+2]-v[i])<100;
                }
                if(flag) ans.push_back(x.first);
            }
        }
        return ans;
    }

------------------OR----------------------

    vector<string> findHighAccessEmployees(vector<vector<string>>& a) {
        unordered_map<string,vector<int>>m;
        vector<string>ans;
        for(auto x:a) m[x[0]].push_back(stoi(x[1]));
        for(auto&[x,v]:m){
            bool flag = false;
            int k = v.size();
            sort(v.begin(),v.end());
            for(int i=0;i<k-2;i++){
                flag |= (v[i+2]-v[i])<100;
            }
            if(flag) ans.push_back(x);
        }
        return ans;
    }

//COMBINATION SUM I:
//GFG: https://practice.geeksforgeeks.org/problems/combination-sum-1587115620/1
    void f(int i,int n,vector<int>arr,vector<int>v,vector<vector<int>>&ans,int k){
        if(k==0){
            ans.push_back(v);
            return;
        }
        if(k<0 || i>=n) return;
        if(arr[i]<=k){
            v.push_back(arr[i]);
            f(i,n,arr,v,ans,k-arr[i]);
            v.pop_back();
        }
        f(i+1,n,arr,v,ans,k);
    }
    vector<vector<int> > combinationSum(vector<int> &vec, int target) {
        // Your code here
        vector<int> t;
        vector<vector<int>>ans;
        sort(vec.begin(),vec.end());
        vec.erase(unique(vec.begin(),vec.end()),vec.end());
        f(0,vec.size(),vec,t,ans,target);
        return ans;
    }

//COMBINATION SUM II
//GFG: https://practice.geeksforgeeks.org/problems/combination-sum-ii/1
    void comSum(vector<int> arr,int ind,int target,vector<int>temp,vector<vector<int>>&ans){
        if(target==0){
            ans.push_back(temp);
        }
        for(int i=ind;i<arr.size();i++){
            if(i>ind && arr[i]==arr[i-1]) continue;
            if(arr[i]>target) break;
            temp.push_back(arr[i]);
            comSum(arr,i+1,target-arr[i],temp,ans);
            temp.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int> &vec, int target) {
        // Your code here
        vector<vector<int>>ans;
        sort( vec.begin(), vec.end() );
        vector<int>temp;
        comSum(vec,0,target,temp,ans);
        return ans;
    }

//COMBINATION SUM III
//Leetcode: https://leetcode.com/problems/combination-sum-iii/
    void f(int i,int n,vector<int>arr,vector<int>v,vector<vector<int>>&ans,int count,int k){
        if(i>=n){
            if(k==0 && v.size()==count) ans.push_back(v);
            return;
        }
        if(arr[i]<=k){
            v.push_back(arr[i]);
            f(i+1,n,arr,v,ans,count,k-arr[i]);
            v.pop_back();
        }
        f(i+1,n,arr,v,ans,count,k);
    }
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int> arr = {1,2,3,4,5,6,7,8,9};
        vector<int>temp;
        vector<vector<int>>ans;
        f(0,9,arr,temp,ans,k,n);
        return ans;
    }
